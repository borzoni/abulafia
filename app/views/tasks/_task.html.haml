- classes_to_add = ""
- @task.accepted_to_start.present? ? classes_to_add << "white_back" : ""
- @task.assigned_to.present? ? "" : classes_to_add << " h"


-unless [0,1,2].include?(@task.task_type.to_i)
  - unless @task.finished_at.present?
    .accept_task{:class => classes_to_add}
      #accepted_time
        -#если в задаче есть поле начал
        - if @task.accepted_to_start.present?
          - if current_user.eql? @task.assigned_to_user
            =link_to project_task_finish_work_path(@task.project, @task), :class =>"blue", :remote => true, :method => "post", :confirm => "Sure?" do
              %i.icon-question-sign
              &nbsp;
              Is the work complete?
          - else
            %i.icon-ok
            Accepted:
            =distance_of_time_in_words_to_now(@task.accepted_to_start)

        -else
          #accept_me
            - if @task.assigned_to_user.present? && @task.assigned_to_user.eql?(current_user)
              =link_to project_task_accept_to_start_path(@task.project, @task), :class =>"green", :remote => true, :method => "post", :confirm => "Sure?" do
                %i.icon-thumbs-up
                &nbsp;
                Accept to start
            - else
              %span
                %i.icon-warning-sign.red
                Not accepted yet

.avatar= gravatar_image_tag @assigned_to
%p.lead
  =type_icon(@task.task_type) if @task.task_type
  &nbsp;
  #{@task.title}


  =link_to edit_project_task_path(@task.project, @task) do |l|
    %i.icon-edit
  - if @task.tag_list.present?
    .row-fluid
      .accordion-group.well-small
        %i.icon-tags
        %small
          =@task.tag_list
  .clear
  - if @task.desc.present?
    .small
      %small
        :markdown
          #{@task.desc}
  - if @task.accepted_to_start
    %small
      -if @task.accepted_to_start
        %i.icon-thumbs-up
        %em
          Accepted to start:
          =distance_of_time_in_words_to_now @task.accepted_to_start
      - if @task.finished_at
        .done
          %i.icon-thumbs-up
          Done at:
          =distance_of_time_in_words_to_now @task.finished_at
#status_events
  - @task.status_behavior.state_events.each do |event|
    = link_to t(event), '#', :class => 'status_event btn',
                             :data => { event: event, url: project_task_path(@task.project, @task) }