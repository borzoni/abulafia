-#=link_to "#myModal" , "#myModal", :data => {:toggle => "modal"}
-##task_modal.modal.hide.fade
-#  .modal-header
-#    %h3 Modal header
-#  .modal-body
-#    %ol
-#      %li
-#        %p
-#          Estimate:
-#        -["0","1","2","3","5","8"].each do |a|
-#          =image_tag "select_"+a+"pt_fibonacci.gif"
-#
-#  .modal-footer
-#    =link_to "Close", "#", :class =>"btn", :data => {:dismiss=>"modal"}, :aria => {:hidden=>"true"}

-#
-#-content_for :icebox do
-#  .accordion{:id => "accordion_id"}
-#
-#    = render :partial => "story", :locals => {:tasks => @project.icebox, :place => "icebox", :updated_task => 'nil'}
-#
-#-content_for :my_work do
-#  .accordion{:id => "accordion_id"}
-#    = render :partial => "story", :locals => {:tasks => @project.my_work(current_user), :place => "my_work", :updated_task => 'nil'}
-#
-#-content_for :backlog do
-#  .accordion{:id => "accordion_id"}
-#    = render :partial => "story", :locals => {:tasks => @project.backlog, :place => "backlog", :updated_task => 'nil'}







.row-fluid
  .span10
    %ul.breadcrumb
      %li
        =link_to "Home", root_path
        %span.divider /
      %li
        =link_to "Projects", projects_path
        %span.divider /
      %li
        .active
          %i.icon-leaf
          %strong
            =@project.name
          =link_to edit_project_path(@project) do |l|
            %i.icon-edit
  .pull-right
    .span7
      =link_to users_list_path(@project) do |u|
        .badge
          Users [
          = @project.users.count
          ]


.lead
  Tasks
#accordion3.accordion
  .accordion-group
    .accordion-heading
      %a(class="accordion-toggle" data-toggle="collapse" data-parent="#accordion3" href="#collapseTask")
        %i.icon-plus
        Create
    #collapseTask.accordion-body.collapse
      .accordion-inner
        = form_for @task , :remote => true do |f|
          .row-fluid
            .control-group
              .controls
                .input-prepend
                  %span.add-on
                    %i.icon-tasks
                  = f.text_field :title, :placeholder => "Enter task", :class => "span11", :autocomplete =>  "off"
          - if @project_users.present?
            .row-fluid
              .control-group
                .controls
                  .input-prepend
                    %span.add-on
                      %i.icon-user
                    = collection_select(:task, :assigned_to, @project_users, :id, :login, :prompt => true)
          .row-fluid
            = f.hidden_field :project_id, :value => @project.id

          =f.submit "Create", {:class => "btn"}
          -#%label.checkbox
          -#  =check_box_tag "advanced_settings"
          -#  %small advanced settings

            -#= f.submit 'ok', :class => "btn btn-info row-right"

  -#-if task.discussion.comments
  -#  .accordion-group.existed_discussions
  -#    .accordion-heading
  -#      %a(class="accordion-toggle add_new_task_link" data-toggle="collapse" data-parent="#accordion3" href="#collapseTaskCreateField")
  -#        %i.icon-list-alt
  -#        =pluralize(@project.tasks.count, "task")
  -#    #collapseTaskCreateField.accordion-body.collapse
  -#      .accordion-inner
  -#
  -#        %table.table.table-striped
  -#          - @project.tasks.each do |t|
  -#            -if t.id
  -#              %tr
  -#                %td.avatar
  -#                  -#= gravatar_image_tag(d.comments.first.user.email)  if d.comments.present?
  -#                  %span.label.label-success
  -#                    =t.status_via_words
  -#                %td
  -#                  = link_to t.title, task_path(t)
  -#                %td
  -#                  =truncate(t.discussion.comments.first.comment) if t.discussion.comments.present?
  -#                %td
  -#                  %i.icon-comment
  -#                  - if t.discussion.comments.present?
  -#                    =link_to task_path(t) do |task|
  -#                      .badge.badge-info
  -#                        =t.discussion.comments.count
  -#                %td
  -#                  %i.icon-remove


.lead
  Discussions
#accordion2.accordion
  .accordion-group
    .accordion-heading
      %a(class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseOne")
        %i.icon-plus
        Create
    #collapseOne.accordion-body.collapse
      .accordion-inner
        = form_for @discussion do |f|
          - if @discussion.errors.any?
            #error_explanation
              %h2= "#{pluralize(@discussion.errors.count, "error")} prohibited this discussion from being saved:"
              %ul
                - @discussion.errors.full_messages.each do |msg|
                  %li= msg
          = f.text_field :title, :placeholder => "Enter topic for discussion and press Enter", :autocomplete =>  "off"
          .desc_of_descussion
            = f.text_area :desc, :placeholder => "Enter description", :autocomplete =>  "off"
          = f.hidden_field :project_id, :value => @project.id

          = f.submit 'Create discussion', :class => "btn"

  -if @project.discussions.exists?
    .accordion-group.existed_discussions
      .accordion-heading
        %a(class="accordion-toggle add_new_discussion_link" data-toggle="collapse" data-parent="#accordion2" href="#collapseTwo")
          %i.icon-list-alt
          =pluralize(@project.discussions.count, "discussion")
      #collapseTwo.accordion-body.collapse
        .accordion-inner
          %table.table.table-striped
            - @project.discussions.each do |d|
              -if d.id
                %tr
                  %td.avatar
                    = gravatar_image_tag(d.comments.first.user.email)  if d.comments.present?
                  %td
                    = link_to d.title, discussion_path(d.id)
                  %td
                    =truncate(d.comments.first.comment) if d.comments.present?
                  %td
                    %i.icon-remove
-#.lead
-#  Tasks
-##accordion3.accordion
-#  .accordion-group
-#    .accordion-heading
-#      %a(class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseOne1")
-#        %i.icon-plus
-#        Create
-#    #collapseOne1.accordion-body.collapse
-#      .accordion-inner
-#        = form_for @task , :remote => true do |f|
-#          - if @task.errors.any?
-#            #error_explanation
-#              %h2= "#{pluralize(@discussion.errors.count, "error")} prohibited this discussion from being saved:"
-#              %ul
-#                - @task.errors.full_messages.each do |msg|
-#                  %li= msg
-#          = f.text_field :title, :placeholder => "Enter task title and press Enter", :autocomplete =>  "off"
-#          =select_tag(:assigned_to,  options_for_select(@project_users))
-#
-#          = f.hidden_field :project_id, :value => @project.id

  -#-if @project.tasks.exists?
  -#  .accordion-group.existed_discussions
  -#    .accordion-heading
  -#      %a(class="accordion-toggle add_new_discussion_link" data-toggle="collapse" data-parent="#accordion2" href="#collapseTwo2")
  -#        %i.icon-list-alt
  -#        =pluralize(@project.tasks.count, 'task')
  -#
  -#    #collapseTwo2.accordion-body.collapse
  -#      .accordion-inner
  -#        %table.table.table-striped
  -#          - @project.tasks.each do |t|
  -#            -if t.id
  -#              %tr
  -#                %td.avatar
  -#                  -#= gravatar_image_tag(d.comments.first.user.email)  if d.comments.present?
  -#                  %span.label.label-success
  -#                    =t.status_via_words
  -#                %td
  -#                  = link_to t.title, task_path(t)
  -#                %td
  -#                  =truncate(t.comments.first.comment) if t.comments.present?
  -#                %td
  -#                  %i.icon-comment
  -#                  - if t.comments.present?
  -#                    =link_to task_path(t) do |task|
  -#                      .badge.badge-info
  -#                        =t.comments.count
  -#                %td
  -#                  %i.icon-remove

-#= link_to 'Edit', edit_project_path(@project)
-#\|
-#= link_to 'Back', projects_path