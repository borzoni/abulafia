-content_for :user_stories do
  .accordion{:id => "accordion_id"}
    -@project.tasks.each do |t|
      .accordion-group
        .accordion-heading
          .row-fluid
            .span10
              =link_to t.title, "#story_1", :class => "accordion-toggle", :data => {:toggle => 'collapse', :parent => "accordion_id"}
            .row-right
              =link_to("#story_1", :class => "accordion-toggle", :data => {:toggle => 'collapse', :parent => "accordion_id"}) do |s|
                .label
                  =t.status_via_works




%ul.breadcrumb
  %li
    =link_to "Home", root_path
    %span.divider /
  %li
    .active
      = link_to @project.name, "#"
.row-fluid
  .span4
    %h3
      = @project.name
      %small= @project.desc

  .pull-right
    .span7
      =link_to users_list_path(@project) do |u|
        .badge
          Users [
          = @project.users.count
          ]

.lead
  Discussions
#accordion2.accordion
  .accordion-group
    .accordion-heading
      %a(class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseOne")
        %i.icon-plus
        Create
    #collapseOne.accordion-body.collapse
      .accordion-inner
        = form_for @discussion do |f|
          - if @discussion.errors.any?
            #error_explanation
              %h2= "#{pluralize(@discussion.errors.count, "error")} prohibited this discussion from being saved:"
              %ul
                - @discussion.errors.full_messages.each do |msg|
                  %li= msg
          = f.text_field :title, :placeholder => "Enter topic for discussion and press Enter", :autocomplete =>  "off"
          .desc_of_descussion
            = f.text_area :desc, :placeholder => "Enter description", :autocomplete =>  "off"
          = f.hidden_field :project_id, :value => @project.id

          = f.submit 'Create discussion', :class => "btn"

  -if @project.discussions.exists?
    .accordion-group.existed_discussions
      .accordion-heading
        %a(class="accordion-toggle add_new_discussion_link" data-toggle="collapse" data-parent="#accordion2" href="#collapseTwo")
          %i.icon-list-alt
          =pluralize(@project.discussions.count, "discussion")
      #collapseTwo.accordion-body.collapse
        .accordion-inner
          %table.table.table-striped
            - @project.discussions.each do |d|
              -if d.id
                %tr
                  %td.avatar
                    = gravatar_image_tag(d.comments.first.user.email)  if d.comments.present?
                  %td
                    = link_to d.title, discussion_path(d.id)
                  %td
                    =truncate(d.comments.first.comment) if d.comments.present?
                  %td
                    %i.icon-remove
.lead
  Tasks
#accordion3.accordion
  .accordion-group
    .accordion-heading
      %a(class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapseOne1")
        %i.icon-plus
        Create
    #collapseOne1.accordion-body.collapse
      .accordion-inner
        = form_for @task do |f|
          - if @task.errors.any?
            #error_explanation
              %h2= "#{pluralize(@discussion.errors.count, "error")} prohibited this discussion from being saved:"
              %ul
                - @task.errors.full_messages.each do |msg|
                  %li= msg
          = f.text_field :title, :placeholder => "Enter task title and press Enter", :autocomplete =>  "off"
          = f.hidden_field :project_id, :value => @project.id

  -if @project.tasks.exists?
    .accordion-group.existed_discussions
      .accordion-heading
        %a(class="accordion-toggle add_new_discussion_link" data-toggle="collapse" data-parent="#accordion2" href="#collapseTwo2")
          %i.icon-list-alt
          =pluralize(@project.tasks.count, 'task')

      #collapseTwo2.accordion-body.collapse.in
        .accordion-inner
          %table.table.table-striped
            - @project.tasks.each do |t|
              -if t.id
                %tr
                  %td.avatar
                    -#= gravatar_image_tag(d.comments.first.user.email)  if d.comments.present?
                    %span.label.label-success
                      =t.status_via_works
                  %td
                    = link_to t.title, task_path(t)
                  %td
                    =truncate(t.comments.first.comment) if t.comments.present?
                  %td
                    %i.icon-comment
                    - if t.comments.present?
                      =link_to task_path(t) do |task|
                        .badge.badge-info
                          =t.comments.count
                  %td
                    %i.icon-remove

-#= link_to 'Edit', edit_project_path(@project)
-#\|
-#= link_to 'Back', projects_path